<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on xbgbtx</title>
    <link>https://xbgbtx.github.io/xbg-blog/tags/web/</link>
    <description>Recent content in web on xbgbtx</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Mar 2021 18:04:37 +0000</lastBuildDate><atom:link href="https://xbgbtx.github.io/xbg-blog/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cellular Automata</title>
      <link>https://xbgbtx.github.io/xbg-blog/posts/cellular-automata/</link>
      <pubDate>Tue, 02 Mar 2021 18:04:37 +0000</pubDate>
      
      <guid>https://xbgbtx.github.io/xbg-blog/posts/cellular-automata/</guid>
      <description>A WebGL cellular automata runtime.
Cellular Automata  Cellular Automata Try it in your browser!
View the Source Code
Cellular automata are a captivating example of how complexity can emerge from simple rules.
Cellular Automata  GPU Acceleration Programming a cellular automata is fairly straightforward. The system simply needs to iterate through a grid and process the states of the cells.
In order to make the simulation run in real time I decided to implement the system using WebGL fragment shaders.</description>
    </item>
    
  </channel>
</rss>
